---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: instrumenters.appo11y.grafana.com
spec:
  group: appo11y.grafana.com
  names:
    kind: Instrumenter
    listKind: InstrumenterList
    plural: instrumenters
    singular: instrumenter
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Instrumenter is the Schema for the instrumenters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstrumenterSpec defines the desired state of Instrumenter
            properties:
              selector:
                default:
                  portLabel: autoinstrument.open.port
                description: Selector overrides the selection of Pods and executables
                  to instrument
                properties:
                  portLabel:
                    default: autoinstrument.open.port
                    description: PortLabel specifies which Pod label would specify
                      which executable needs to be instrumented, according to the
                      port it opens. Any pod containing the label would be selected
                      for instrumentation
                    type: string
                type: object
            type: object
          status:
            description: InstrumenterStatus defines the observed state of Instrumenter
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
